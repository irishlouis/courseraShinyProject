library(shiny)
library(dplyr)
library(lubridate)
library(xts)
library(dygraphs)
library(TTR)
library(shiny)
library(dplyr)
library(shiny)
library(dplyr)
library(lubridate)
library(xts)
library(dygraphs)
library(TTR)
lapply(c("shiny", "dplyr", "ggplot2", "lubridate", "xts", "dygraphs", "TTR"), install.packages)
install.packages("manipulate")
install.packages(devtools)
install.packages("devtools")
install.packages("Rtools")
library(shiny)
getwd()
list.files()
setwd("~/shiny_project")
setwd("c/users/louis/courseraShinyProject")
getwd()
setwd("c:/users/louis/courseraShinyProject")
list.files
list.files()
setwd("c:/users/louis/courseraShinyProject/proj")
library(shiny)
library(TTR)
library(dygraphs)
names <- stockSymbols(exchange = "NASDAQ")$Symbol
shinyUI(pageWithSidebar(
headerPanel('NASDAQ - Stock Closing Prices Comparator'),
sidebarPanel(
selectInput(inputId = 'stock1', label = 'Stock 1', choices = names, selected = "GOOG"),
selectInput(inputId = 'stock2', label = 'Stock 2', choices = names, selected = "AAPL"),
sliderInput('n.days', 'Number of days', 365,
min = 7, max = 1000)
),
mainPanel(
dygraphOutput("plot1"),
p(),
p('Change (%) in Closing Price for Stock 1'),
verbatimTextOutput("head1"),
('Change (%) in Closing Price for Stock 2'),
verbatimTextOutput("head2") ,
('Relative Performance (%)'),
verbatimTextOutput("head3")
)
))
library(shiny)
library(dplyr)
library(lubridate)
library(xts)
library(dygraphs)
library(TTR)
shinyServer(function(input, output, session) {
message("getting data")
dates <- reactive({ymd(row.names(as.data.frame(getYahooData(input$stock1,
start = format(today() - days(input$n.days), "%Y%m%d"),
end = format(today() - days(1), "%Y%m%d")))))
})
df1 <- reactive({cbind(Date = dates(), as.data.frame(getYahooData(input$stock1,
start = format(today() - days(input$n.days), "%Y%m%d"),
end = format(today() - days(1), "%Y%m%d"))) %>%
mutate(stock = input$stock1) %>%
select(stock, Close, Volume))
})
df2 <- reactive({cbind(Date = dates(), as.data.frame(getYahooData(input$stock2,
start = format(today() - days(input$n.days), "%Y%m%d"),
end = format(today() - days(1), "%Y%m%d"))) %>%
mutate(stock = input$stock2) %>%
select(stock, Close, Volume))
})
df <- reactive({list(df1(), df2())})
output$head1 <- renderPrint({100*round(df1()[nrow(df1()), 3] / df1()[1, 3] - 1, 2)})
output$head2 <- renderPrint({100*round(df2()[nrow(df2()), 3] / df2()[1, 3] - 1, 2)})
output$head3 <- renderPrint({ tmp1 <- round(df1()[nrow(df1()), 3] / df1()[1, 3] , 2)
tmp2 <- round(df2()[nrow(df2()), 3] / df2()[1, 3] , 2)
return(100 * ifelse(tmp1 > tmp2,
round(tmp1/tmp2, 2) - 1,
round(tmp2/tmp1, 2) - 1
)
)
})
stock.xts <- reactive({
stocks <- NULL
for(i in 1:2){
stocks <- cbind(stocks, xts(df()[[i]]$Close, order.by = df()[[i]]$Date, frequency = 365))
}
names(stocks) <- c(input$stock1, input$stock2)
stocks
})
output$plot1 <- renderDygraph({
dygraph(stock.xts(), ylab="Close",
main="Hover on line for Closing Price") %>%
dyRangeSelector()
})
})
runApp()
deployApp()
library(devtools)
find_rtools()
install_github('rstudio/shinyapp')
install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='irishlouissmith', token='74C1CE2457EB68932154C7D92F2F9C50', secret='PPMiUwai+6urFYkNImXYyKxe63T0NOxcNin5LzN0')
find_rtools()
deployApp()
library(shinyapps)
deployApp()
find_rtools()
runApp()
getwd()
deployApp()
